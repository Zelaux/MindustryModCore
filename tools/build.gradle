apply plugin: "java"
sourceSets.main.java.srcDirs = ["src/"]

jar{
    from(rootDir){
        include("core/mindustrySprites.zip")
    }
    exclude("META-INF/*.SF")
    exclude("META-INF/*_.*")
    exclude("META-INF/*._*")
    exclude("META-INF/*_._*")
/*
    println "classpath: " + configurations.runtimeClasspath.asList()
    configurations.runtimeClasspath.asList().forEach((File f) -> {
        println "2f: " + f
        true
    })
   *//* configurations.runtimeClasspath.set(configurations.runtimeClasspath.asList().filter((File f) -> {
        println "2f: " + f
        true
    }))*//*
    configurations.runtimeClasspath.filter((File f) -> {
        println "f: " + f
        true
    })*/
}


apply plugin: "java"
apply plugin: "java-library"
compileJava.options.fork = true
dependencies{
    implementation 'commons-io:commons-io:2.5'
    implementation("org.apache.xmlgraphics:batik-svgrasterizer:1.9")

    implementation project(":core")
    implementation project(":annotations")
    implementation arcModule('arc-core')

    implementation "com.github.javaparser:javaparser-symbol-solver-core:$jparcerVersion"
    compileOnly mindustryModule("core")
//        implementation mindustryOldModule("tools")

    implementation "org.eclipse.jgit:org.eclipse.jgit:$jgitVersion"
//        println "Hello tools"
    configurations.runtimeClasspath.filter((File f) -> {
        println "f: " + f
        true
    })
}

task updateMindustryVersion(dependsOn: [":tools:jar", configurations.runtimeClasspath], type: JavaExec){
    maxHeapSize = "4048m"
    args("-Xmx4048m", "--enable-preview", "v_${mindustryVersion}", "arc_${arcVersion}")
    main = "mmc.tools.updateVersion.MindustryVersionUpdater"
    classpath = sourceSets.main.runtimeClasspath
    workingDir = "../"
}
task checkJitPack(dependsOn: [classes, configurations.runtimeClasspath], type: JavaExec){
    maxHeapSize = "4048m"
    args("-Xmx4048m", "--enable-preview", "v_${mindustryVersion}")
    main = "mmc.tools.VersionsFileUpdater"
    classpath = sourceSets.main.runtimeClasspath
    workingDir = "../"
}